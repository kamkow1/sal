namespace linux

compile_if T_ARCH = "x86_64" {
    define proc do_syscall(
        rax int64,
        rdi int64,
        rsi int64,
        rdx int64,
        r10 int64,
        r8  int64,
        r9  int64
    ) int64 {
        return assembler(
            "syscall",
            "=r,{rax},{rdi},{rsi},{rdx},{r10},{r9},{r8}",
            type proc(rax int64,rdi int64,rsi int64,rdx int64,r10 int64,r8  int64,r9  int64) int64,
            rax,
            rdi,
            rsi,
            rdx,
            r10,
            r8,
            r9 
        )
    }
    
    define proc exit(error int) void
    {
        do_syscall(0x3C, error, 0, 0, 0, 0, 0)
    }

    define proc open(path *int8, flags int, mode uint16) int
    {
        return do_syscall(0x02, path, flags, mode, 0, 0, 0)
    }

    define proc close(fd int) int
    {
        return do_syscall(0x03, fd, 0, 0, 0, 0, 0)
    }

    define proc write(fd int, buf *void, size int) int
    {
        return do_syscall(0x01, fd, buf, size, 0, 0, 0)
    }
}

